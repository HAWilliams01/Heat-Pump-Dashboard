{"version":3,"sources":["components/home.component.js","components/information.component.js","App.js","serviceWorker.js","index.js"],"names":["Information","rel","href","align","className","display","width","height","title","src","Component","App","to","alt","path","exact","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qVAKqBA,G,uLAEb,OACA,6BACA,0BAAMC,IAAI,aAAaC,KAAK,qDAC5B,0BAAMD,IAAI,aAAaC,KAAK,6CAC5B,0BAAMD,IAAI,aAAaC,KAAK,6CACxB,8BACI,yBAAKC,MAAM,SAASC,UAAU,wDAAwDC,QAAQ,gBAC1F,yBAAKD,UAAU,QACf,4BAAQE,MAAM,MAAMC,OAAO,MAAMC,MAAM,gBAAgBL,MAAM,SAC7DM,IAAI,8WAEJ,8BAIJ,yBAAKN,MAAM,SAASC,UAAU,gEAAgEC,QAAQ,gBAClG,yBAAKD,UAAU,QACf,6BACA,4BAAQE,MAAM,MAAMC,OAAO,MAAMC,MAAM,qBAAqBL,MAAM,OAClEM,IAAI,6VAGJ,6BACA,4BAAQH,MAAM,MAAMC,OAAO,MAAMC,MAAM,oBAAoBL,MAAM,QACjEM,IAAI,8WAEJ,+BAIJ,yBAAKN,MAAM,SAASC,UAAU,wDAAwDC,QAAQ,gBAC1F,yBAAKD,UAAU,QACf,4BAAQE,MAAM,MAAMC,OAAO,MAAMC,MAAM,uBACvCC,IAAI,qX,GAnCiBC,cCHpBV,E,iLAEb,OACA,6BACA,0BAAMC,IAAI,aAAaC,KAAK,qDAC5B,0BAAMD,IAAI,aAAaC,KAAK,6CAExB,8BACA,yBAAKC,MAAM,SAASC,UAAU,gEAAgEC,QAAQ,gBAClG,yBAAKD,UAAU,OAAOD,MAAM,QACxB,gEACA,4DACA,kDACA,yCAAc,uBAAGD,KAAK,4DAAR,4DACd,6BACA,2BAAG,4CAAH,0PAGA,6BACA,2BAAG,mDAAH,mX,GAnBqBQ,aCkC1BC,MA7Bf,WACE,OACE,8BACM,6BACJ,kBAAC,IAAD,KACF,yBAAKP,UAAU,aACd,yBAAKA,UAAU,+CAChB,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,UAAU,gBAAvB,aACA,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,eACd,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,UAAU,YAAvB,SAEA,wBAAIA,UAAU,eACd,kBAAC,IAAD,CAAMQ,GAAG,eAAeR,UAAU,YAAlC,gBAKR,wBAAID,MAAM,OAAOC,UAAU,aAA3B,YAAgD,yBAAKS,IAAI,GAAGN,OAAO,KAAKJ,MAAM,QAAQM,IAAI,oHAC1F,kBAAC,IAAD,CAAOK,KAAK,IAAIC,OAAK,EAACC,UAAYC,IAClC,kBAAC,IAAD,CAAOH,KAAK,eAAeE,UAAYhB,SChBvBkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3ffaaec4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../home-component.css\";\r\n\r\n//add ItemName property in iframe\r\n\r\nexport default class Information extends Component {\r\n    render() {\r\n        return (\r\n        <div>\r\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-colors-flat.css\"></link>\r\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\r\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\r\n            <body>\r\n                <div align=\"center\" className=\"w3-panel w3-card w3-round-large w3-flat-midnight-blue\" display=\"inline-block\">\r\n                    <div className=\"tile\">\r\n                    <iframe width=\"800\" height=\"500\" title=\"heatPumpTable\" align=\"center\"\r\n                    src=\"https://liveindianatech-my.sharepoint.com/personal/lrodriguesb01_indianatech_net/_layouts/15/Doc.aspx?sourcedoc={d6f92ca9-7c4c-4cf9-9f7d-7469b189badc}&action=embedview&wdAllowInteractivity=False&ActiveCell='Data'!A2&wdHideGridlines=True&wdHideHeaders=True&wdDownloadButton=True&wdInConfigurator=True&wdDownloadButton=False&wdHideSheetTabs=True&wdbipreview=True\"></iframe>\r\n                    </div>\r\n                    <br></br>\r\n                </div>\r\n                \r\n\r\n                <div align=\"center\" className=\"w3-panel w3-card w3-round-large w3-card w3-flat-midnight-blue\" display=\"inline-block\">\r\n                    <div className=\"tile\">\r\n                    <div>\r\n                    <iframe width=\"400\" height=\"805\" title=\"heatEnthalpyPoints\" align=\"left\"\r\n                    src=\"https://liveindianatech-my.sharepoint.com/personal/lrodriguesb01_indianatech_net/_layouts/15/Doc.aspx?sourcedoc={d6f92ca9-7c4c-4cf9-9f7d-7469b189badc}&action=embedview&wdAllowInteractivity=False&ActiveCell='Iteration'!B2&wdHideGridlines=True&wdHideHeaders=True&wdInConfigurator=True&wdDownloadButton=False&wdHideSheetTabs=True&wdbipreview=True\"></iframe>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <iframe width=\"600\" height=\"600\" title=\"heatEnthalpyGraph\" align=\"right\" \r\n                    src=\"https://liveindianatech-my.sharepoint.com/personal/lrodriguesb01_indianatech_net/_layouts/15/Doc.aspx?sourcedoc={d6f92ca9-7c4c-4cf9-9f7d-7469b189badc}&action=embedview&wdAllowInteractivity=False&ActiveCell='Plot'!A4&wdHideGridlines=True&wdHideHeaders=True&wdInConfigurator=True&wdInConfigurator=True&wdDownloadButton=False&wdHideSheetTabs=True&wdbipreview=True\"></iframe>\r\n                    </div>\r\n                    <br></br>\r\n                    </div>\r\n                </div>\r\n\r\n                <div align=\"center\" className=\"w3-panel w3-card w3-round-large w3-flat-midnight-blue\" display=\"inline-block\">\r\n                    <div className=\"tile\">\r\n                    <iframe width=\"800\" height=\"750\" title=\"Tempatures/Pressures\"\r\n                    src=\"https://liveindianatech-my.sharepoint.com/personal/lrodriguesb01_indianatech_net/_layouts/15/Doc.aspx?sourcedoc={d6f92ca9-7c4c-4cf9-9f7d-7469b189badc}&action=embedview&wdAllowInteractivity=False&ActiveCell='Plot'!S4&wdHideGridlines=True&wdHideHeaders=True&wdInConfigurator=True&wdInConfigurator=True&wdDownloadButton=False&wdHideSheetTabs=True&wdbipreview=True\"></iframe>\r\n                    </div>\r\n                </div>\r\n\r\n            </body>\r\n        </div>    \r\n\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Information extends Component {\r\n    render() {\r\n        return ( \r\n        <div>\r\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-colors-flat.css\"></link>\r\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"></link>\r\n\r\n            <body>\r\n            <div align=\"center\" className=\"w3-panel w3-card w3-round-large w3-card w3-flat-midnight-blue\" display=\"inline-block\">\r\n                <div className=\"tile\" align=\"left\">\r\n                    <h3>Project creator: Hunter Williams</h3>\r\n                    <h4>Major: Computer Science B.S.</h4>\r\n                    <h4>Minor: Mathematics</h4>\r\n                    <h4>LinkedIn: <a href=\"https://www.linkedin.com/in/hunter-williams-indianatech/\">https://www.linkedin.com/in/hunter-williams-indianatech</a></h4>\r\n                    <br></br>\r\n                    <p><strong>Purpose:</strong> This project includes web development and front end services, which are topics I am interested in and want to learn more about.\r\n                       Creating this project is important to me because it applies to the real world and better prepares me post graduation. \r\n                    </p>\r\n                    <br></br>\r\n                    <p><strong>Project Thesis:</strong> Create a front-end dashboard to view the information about a newly installed heat pump on Indiana Techâ€™s campus. The dashboard collects data from a data logger and stores the data in a database. That data is then transferred over the intranet where it will propagate the dashboard, showing real-time displays of the heat pump data via tables and graphs.</p>                                       \r\n                </div>\r\n            </div>\r\n            </body>\r\n\r\n        </div>\r\n        \r\n        )\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport Home from \"./components/home.component.js\";\nimport Information from \"./components/information.component.js\";\n\nfunction App() {\n  return (\n    <body>\n          <div>\n      <Router>\n    <div className=\"container\">\n     <nav className=\"navbar navbar-dark bg-dark navbar-expand-sm\">\n    <Link to=\"/\" className=\"navbar-brand\">Heat Pump</Link>\n    <div className=\"collapse navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n            <Link to=\"/\" className=\"nav-link\">Home</Link>\n            </li>\n            <li className=\"navbar-item\">\n            <Link to=\"/information\" className=\"nav-link\">About Me</Link>\n            </li>\n        </ul>\n        </div>\n    </nav>\n    <h2 align=\"left\" className=\"dashboard\">Dashboard<img alt=\"\" height=\"50\" align=\"right\" src=\"https://dbukjj6eu5tsf.cloudfront.net/sidearm.sites/indianatech.sidearmsports.com/images/responsive/it_logo.svg\"></img></h2>\n    <Route path=\"/\" exact component={ Home } />\n    <Route path=\"/information\" component={ Information } />\n    </div>  \n    </Router>\n    </div>\n    </body>\n  );\n}\n\nexport default App;\n\n/*\ngit init\ngit add README.md\ngit commit -m \"first\"\ngit remote add origin https://github.com/HAWilliams01/Heat-Pump-Dashboard.git\ngit push -u origin master\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}